name: Build
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-13
          - windows-latest
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

#      - name: Install dependencies (ubuntu only)
#        if: matrix.platform == 'ubuntu-20.04'
#        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

#      - name: Replace version in Cargo.toml
#        run: |
#          sed -i "" "s/__VERSION__/${{ github.event.inputs.version }}/g" src-tauri/Cargo.toml

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm install # Change this to npm, yarn or pnpm.

      - name: Build the app
        uses: tauri-apps/tauri-action@v0

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.event.inputs.version }} # This only works if your workflow triggers on new tags.
          releaseName: 'Game Launcher v__VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
#          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: false
          prerelease: true
          appVersion: ${{ github.event.inputs.version }}
          includeUpdaterJson: true
